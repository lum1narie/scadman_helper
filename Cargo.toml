[package]
name = "scadman_helper"
version = "0.1.0"
edition = "2021"
rust-version = "1.85"

[lints.clippy]
# MachineApplicable in nursery and pedantic 

borrow_as_ptr = "warn"
cast_lossless = "warn"
checked_conversions = "warn"
clear_with_drain = "warn"
cloned_instead_of_copied = "warn"
derive_partial_eq_without_eq = "warn"
doc_markdown = "warn"
enum_glob_use = "deny"
equatable_if_let = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
if_not_else = "warn"
ignored_unit_patterns = "warn"
implicit_clone = "warn"
imprecise_flops = "warn"
inconsistent_struct_constructor = "warn"
inefficient_to_string = "warn"
manual_assert = "warn"
manual_instant_elapsed = "warn"
manual_is_power_of_two = "warn"
manual_is_variant_and = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
map_unwrap_or = "warn"
match_bool = "warn"
missing_const_for_fn = "warn"
needless_bitwise_bool = "warn"
needless_collect = "warn"
needless_for_each = "warn"
needless_raw_string_hashes = "warn"
# non_std_lazy_statics = "warn"  # 1.81.0
option_as_ref_cloned = "warn"
path_buf_push_overwrite = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
range_minus_one = "warn"
range_plus_one = "warn"
redundant_clone = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
redundant_pub_crate = "warn"
ref_as_ptr = "warn"
ref_binding_to_reference = "warn"
semicolon_if_nothing_returned = "warn"
single_char_pattern = "warn"
single_match_else = "warn"
stable_sort_primitive = "warn"
string_lit_as_bytes = "warn"
suboptimal_flops = "warn"
suspicious_operation_groupings = "warn"
too_long_first_doc_paragraph = "warn"
trait_duplication_in_bounds = "warn"
unchecked_duration_subtraction = "warn"
unicode_not_nfc = "warn"
uninlined_format_args = "warn"
unnecessary_join = "warn"
# unnecessary_literal_bound = "warn"  # 1.84.0
# unnecessary_semicolon = "warn"  # 1.86.0
unnecessary_struct_initialization = "warn"
unnested_or_patterns = "warn"
unused_rounding = "warn"
use_self = "warn"

# in restricts
as_conversions = "warn"
# as_pointer_underscore = "warn"  # 1.81.0
as_underscore = "warn"
assertions_on_result_states = "warn"
clone_on_ref_ptr = "warn"
dbg_macro = "warn"
default_union_representation = "warn"
empty_enum_variants_with_brackets = "warn"
empty_structs_with_brackets = "warn"
error_impl_error = "warn"
filetype_is_file = "warn"
float_cmp_const = "warn"
fn_to_numeric_cast_any = "warn"
get_unwrap = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
lossy_float_literal = "warn"
map_err_ignore = "warn"
# map_with_unused_argument_over_ranges = "warn"  # 1.84.0
mem_forget = "warn"
mixed_read_write_in_expression = "warn"
modulo_arithmetic = "warn"
# non_zero_suggestions = "warn"  # 1.83.0
pathbuf_init_then_push = "warn"
# pattern_type_mismatch = "warn"  # Caused by `ambassador`
# precedence_bits = "warn"  # 1.86.0
rc_buffer = "warn"
rc_mutex = "warn"
redundant_type_annotations = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
# return_and_then = "warn"  # 1.86.0
same_name_method = "warn"
semicolon_inside_block = "warn"
shadow_reuse = "warn"
shadow_same = "warn"
shadow_unrelated = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
tests_outside_test_module = "warn"
todo = "warn"
try_err = "warn"
unimplemented = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
unused_result_ok = "warn"
unused_trait_names = "warn"
verbose_file_reads = "warn"

[lints.rust]
future-incompatible = "deny"
deprecated-safe = "warn"
let-underscore-drop = "warn"
nonstandard-style = "warn"
keyword-idents = "warn"
rust-2018-compatibility = "warn"
rust-2018-idioms = "warn"
rust-2021-compatibility = "warn"
rust-2024-compatibility = "warn"

ambiguous_negative_literals = "warn"
# fuzzy-provenance-casts = "warn"
# lossy-provenance-casts = "warn"
macro-use-extern-crate = "warn"
meta-variable-misuse = "warn"
missing-copy-implementations = "warn" 
missing-debug-implementations = "warn"
missing-docs = "warn"
# multiple-supertrait-upcastable = "warn"
non-ascii-idents = "deny"
redundant-imports = "warn"
redundant-lifetimes = "warn"
single-use-lifetimes = "warn"
trivial-casts = "warn"
trivial-numeric-casts = "warn"
unit-bindings = "warn"
# unnameable-types = "warn"  # Caused by `ambassador`
# unqualified-local-imports = "warn"
unused-crate-dependencies = "warn"
unused-import-braces = "warn"
unused_lifetimes = "warn"
unused-qualifications = "warn"
unused_results = "warn"
variant-size-differences = "warn"

[dependencies]
ambassador = "0.4.1"
derive_builder = "0.20.2"
derive_more = { version = "1.0.0", features = ["deref", "from"] }
nalgebra = "0.33.2"
paste = "1.0.15"
scadman = { git = "https://github.com/lum1narie/scadman.git", tag = "v0.3.0", version = "0.3.0" }
